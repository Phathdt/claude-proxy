name: Build & Push Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 0.1.0)"
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: phathdt379
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Build frontend
        run: |
          cd frontend
          pnpm install
          pnpm build

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            phathdt379/claude-proxy:${{ github.event.inputs.version }}
            phathdt379/claude-proxy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ github.event.inputs.version }}
          name: Claude Proxy v${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          body: |
            # Claude Proxy v${{ github.event.inputs.version }}

            ## 🐳 Docker Image

            **Multi-platform support:** Linux (amd64, arm64) including macOS M1/M2/M3

            ```bash
            docker pull phathdt379/claude-proxy:${{ github.event.inputs.version }}
            ```

            ## 🚀 Quick Start

            ### Pull & Run
            ```bash
            docker run -d \
              --name claude-proxy \
              -p 4000:4000 \
              -v ~/.claude-proxy/data:/app/data \
              -v $(pwd)/config.yaml:/app/config.yaml \
              phathdt379/claude-proxy:${{ github.event.inputs.version }}
            ```

            ### Check Health
            ```bash
            docker logs claude-proxy
            docker exec claude-proxy wget -O - http://localhost:4000/health
            ```

            ## ⚙️ Configuration

            1. Copy configuration template:
               ```bash
               cp config.example.yaml config.yaml
               ```
            2. Edit `config.yaml` with your settings:
               - OAuth credentials
               - API key for admin operations
               - Server port and logging level
            3. Mount as volume:
               ```bash
               -v $(pwd)/config.yaml:/app/config.yaml
               ```

            ## ✨ Features

            - 🔐 **OAuth 2.0 with PKCE**: Secure multi-account authentication
            - 📊 **Multi-Account Support**: Load balance across multiple Claude accounts
            - 🔄 **Automatic Token Refresh**: Hourly cronjob + on-demand (60s buffer)
            - ⚖️ **Load Balancing**: Stateless round-robin with health filtering
            - 📡 **Claude API Proxy**: Full `/v1/messages` endpoint support
            - 📈 **Admin Dashboard**: React-based UI for account management
            - 💾 **JSON Persistence**: File-based storage (no database required)
            - 🔑 **API Key Protection**: Secure proxy requests with configurable API keys

            ## 📚 Documentation

            - [GitHub Repository](https://github.com/${{ github.repository }})
            - [README](https://github.com/${{ github.repository }}/blob/main/README.md)
            - [Docker Deployment Guide](https://github.com/${{ github.repository }}/blob/main/docs/DOCKER_DEPLOYMENT.md)
            - [Architecture](https://github.com/${{ github.repository }}/blob/main/CLAUDE.md)

      - name: Build success notification
        run: |
          echo "✅ Build and Release Complete!"
          echo ""
          echo "📦 Docker Image:"
          echo "   phathdt379/claude-proxy:${{ github.event.inputs.version }}"
          echo "   phathdt379/claude-proxy:latest"
          echo ""
          echo "🏷️  GitHub Release Tag: v${{ github.event.inputs.version }}"
          echo ""
          echo "🚀 Pull and run:"
          echo "   docker pull phathdt379/claude-proxy:${{ github.event.inputs.version }}"
          echo "   docker run -p 4000:4000 phathdt379/claude-proxy:${{ github.event.inputs.version }}"
